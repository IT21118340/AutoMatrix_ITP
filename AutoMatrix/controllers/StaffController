const Employee = require('../models/StaffModel')

// Create a new employee
const createEmployee = async (req, res) => {
  try {
    const employee = new Employee(req.body)
    await employee.save()
    res.status(201).send(employee)
  } catch (error) {
    res.status(400).send(error)
  }
}

// Get all employees
const getEmployees = async (req, res) => {
  try {
    const employees = await Employee.find({})
    res.send(employees)
  } catch (error) {
    res.status(500).send(error)
  }
}

// Get a single employee by ID
const getEmployeeById = async (req, res) => {
  try {
    const employee = await Employee.findById(req.params.id)
    if (!employee) {
      return res.status(404).send()
    }
    res.send(employee)
  } catch (error) {
    res.status(500).send(error)
  }
}

// Update an employee by ID
const updateEmployeeById = async (req, res) => {
  try {
    const updates = Object.keys(req.body)
    const allowedUpdates = [
      'employeeID',
      'name',
      'age',
      'email',
      'position',
      'phone',
      'salary',
    ]
    const isValidOperation = updates.every((update) =>
      allowedUpdates.includes(update)
    )

    if (!isValidOperation) {
      return res.status(400).send({ error: 'Invalid updates!' })
    }

    const employee = await Employee.findByIdAndUpdate(req.params.id, req.body, {
      new: true,
      runValidators: true,
    })

    if (!employee) {
      return res.status(404).send()
    }

    res.send(employee)
  } catch (error) {
    res.status(400).send(error)
  }
}

// Delete an employee by ID
const deleteEmployeeById = async (req, res) => {
  try {
    const employee = await Employee.findByIdAndDelete(req.params.id)
    if (!employee) {
      return res.status(404).send()
    }
    res.send(employee)
  } catch (error) {
    res.status(500).send(error)
  }
}

module.exports = {
  createEmployee,
  getEmployees,
  getEmployeeById,
  updateEmployeeById,
  deleteEmployeeById,
}
